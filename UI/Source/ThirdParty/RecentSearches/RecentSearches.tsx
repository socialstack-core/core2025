import { Product } from "Api/Product";
import { useEffect, useState } from "react";
import RecentSearchProductItem from "./ProductItem";

/**
 * Generates an array of dummy `Product` objects for testing and development purposes.
 *
 * This mock data can be used to simulate recent product searches during early UI prototyping
 * or when backend data is not yet available.
 *
 * @returns {Product[]} An array of mock `Product` entries with placeholder values.
 */
const generateDummyData = (): Product[] => {
    const data: Product[] = [];

    for (let i = 0; i < 5; i++) {
        data.push({
            id: i as uint,
            userId: 0 as uint,
            createdUtc: "",
            editedUtc: "",
            revision: i as int,
            sku: "SKU00" + i,
            name: "Product " + i + " with some overflowing text to ellipsize.",
            slug: "/product-" + i + ".html",
            isBilledByUsage: false,
            billingFrequency: 1 as int,
            minQuantity: 1 as int,
            descriptionJson: "A random product (AutoGenerated " + i + ")",
        } as Product);
    }

    return data;
};

/**
 * React component that displays a list of recently searched products in a horizontal scrollable list.
 *
 * The recent searches are intended to provide quick access to previously viewed or queried products.
 * Currently, the data is statically generated using `generateDummyData()` and rendered using the
 * `RecentSearchProductItem` component.
 *
 * ### Features:
 * - Renders a scrollable horizontal list of product items.
 * - Displays product name and image using the child component.
 * - Stubbed data generation to be replaced by actual search history logic.
 *
 * ### Future Enhancements:
 * - Replace `generateDummyData()` with actual user search history from a backend or localStorage.
 * - Add click tracking or navigation logic when items are interacted with.
 * - Limit number of stored searches and add deduplication logic.
 *
 * @component
 * @example
 * ```tsx
 * <RecentSearches />
 * ```
 *
 * @returns {React.ReactElement} The rendered list of recent product searches.
 */
const RecentSearches: React.FC<{}> = (props): React.ReactElement => {
    /**
     * State variable holding the list of recently searched products.
     * This will be populated with real user history in a later iteration.
     */
    const [recentSearches, setRecentSearches] = useState<Product[]>([]);

    /**
     * Temporary effect to populate the `recentSearches` state with mock data.
     * This should be removed or replaced when real search data is available.
     */
    useEffect(() => {
        setRecentSearches(generateDummyData());
    }, [recentSearches]);

    return (
        <div className={'recent-searches'}>
            <div className={'panel-header'}>
                {`Recent searches`}
            </div>
            <div className={'panel-body'}>
                <ul className={'recent-searches-product-list'}>
                    {recentSearches.map(product => (
                        <RecentSearchProductItem product={product} key={product.id} />
                    ))}
                </ul>
            </div>
        </div>
    );
};

export default RecentSearches;
