@layer forms {

	:root {
		--ui-field-checkbox-width: #{toRem(32)};
		--ui-field-checkbox-height: #{toRem(32)};
		--ui-field-checkbox-spacing: #{toRem(10)};
		--ui-field-checkbox-padding: #{toRem(6)};
		--ui-field-checkbox-label-offset: #{toRem(3)};

		// switch styling
		--ui-field-switch-width: #{toRem(56)};
		--ui-field-switch-height: var(--ui-field-checkbox-height);
		--ui-field-switch-spacing: var(--ui-field-checkbox-spacing);
		--ui-field-switch-padding: var(--ui-field-checkbox-padding);
		--ui-field-switch-label-offset: var(--ui-field-checkbox-label-offset);
	}

	.ui-form__field:has(input[type="checkbox"]) {
		min-height: var(--ui-field-checkbox-height);
		--ui-field-checkbox-offset: calc(var(--ui-field-checkbox-width) + var(--ui-field-checkbox-spacing));
		padding-inline-start: var(--ui-field-checkbox-offset);

		&:has(input[type="checkbox"]:disabled) {
			@include disabledProps;
		}

		input[type="checkbox"] {
			// NB: hidden by injection of .visually-hidden class (see Checkbox.tsx)

			&:checked + label {

				&::before {
					// replacement checkbox (border, checked state)
					background-color: var(--ui-primary);
				}

				&::after {
					// replacement checkbox (icon, checked state)
					// NB: uses background-color rather than color, as the icon is formed using a mask
					// (allows us to recolour an SVG referenced within a data URL)
					background-color: var(--ui-primary-fg);
				}

				&:hover {

					&::before {
						background-color: var(--ui-primary-light);
					}

				}

				&:active {

					&::before {
						background-color: var(--ui-primary-dark);
					}

				}

			}

		}

		label {
			display: block;
			padding-block-start: var(--ui-field-checkbox-label-offset);

			&::before, &::after {
				content: "";
				display: block;
				float: left;
				transition-property: color, background-color, border-color, box-shadow, opacity;
				transition-duration: .2s;
				transition-timing-function: ease;
			}

			&::before {
				// replacement checkbox (border)
				border: var(--ui-field-border-width) var(--ui-field-border-style) var(--ui-field-border-color);
				//border-radius: var(--ui-field-border-radius);
				border-radius: .25rem;
				background-color: var(--ui-field-background-color);
				width: var(--ui-field-checkbox-width);
				height: var(--ui-field-checkbox-height);
				margin-inline-start: calc(var(--ui-field-checkbox-offset) * -1);
				margin-block-start: calc(var(--ui-field-checkbox-label-offset) * -1);
			}

			&::after {
				// replacement checkbox (icon)
				mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='4' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M20 6 9 17l-5-5'/%3E%3C/svg%3E");
				mask-size: cover;
				width: calc(var(--ui-field-checkbox-width) - (2 * var(--ui-field-checkbox-padding)));
				height: calc(var(--ui-field-checkbox-height) - (2 * var(--ui-field-checkbox-padding)));
				margin-inline-start: calc((var(--ui-field-checkbox-offset) * -1) + var(--ui-field-checkbox-padding));
				margin-block-start: calc((var(--ui-field-checkbox-label-offset) * -1) + var(--ui-field-checkbox-padding));
			}

		}

		&:hover {

			label {

				&::before {
					border-color: var(--ui-field-color-border-color--hover);
				}

			}

		}

		&:focus-within {

			label {

				&::before {
					border-color: var(--ui-field-color-border-color--active);
				}

			}

		}

		+ .ui-form__field-help {
			//margin-block-start: 0;
		}

		// switch styling
		&:has(.ui-form__field-checkbox--switch) {
			min-height: var(--ui-field-switch-height);
			--ui-field-color: var(--ui-site-fg);
			--ui-field-switch-offset: calc(var(--ui-field-switch-width) + var(--ui-field-switch-spacing));
			--ui-field-switch-dot-size: calc(var(--ui-field-switch-height) - (2 * var(--ui-field-switch-padding)));
			--ui-field-switch-transform: calc(var(--ui-field-switch-width) - 2px - 
				(2 * var(--ui-field-switch-dot-size)) -
				(2 * var(--ui-field-switch-padding))
			);
			padding-inline-start: var(--ui-field-switch-offset);

			input[type="checkbox"] {

				+ label::after {
					background-color: var(--ui-field-color);
					opacity: var(--ui-disabled-opacity);
					transition-property: background-color, opacity, transform;
					transition-duration: .2s;
					transition-timing-function: ease;
				}

				&:checked + label {

					&::before {
						// replacement checkbox (border, checked state)
						//background-color: var(--ui-primary);
					}

					&::after {
						opacity: 1;
						background-color: var(--ui-primary-fg);
						transform: translateX(calc(var(--ui-field-switch-dot-size) + var(--ui-field-switch-transform)));
					}

					/*
					&:hover {

						&::before {
							background-color: var(--ui-primary-light);
						}

					}

					&:active {

						&::before {
							background-color: var(--ui-primary-dark);
						}

					}
					*/

				}

			}

			label {
				padding-block-start: var(--ui-field-switch-label-offset);

				&::before {
					// replacement checkbox (border)
					//border: var(--ui-field-border-width) var(--ui-field-border-style) var(--ui-field-border-color);
					border-radius: calc(var(--ui-field-switch-height) / 2); //var(--ui-field-border-radius);
					//background-color: var(--ui-field-background-color);
					width: var(--ui-field-switch-width);
					height: var(--ui-field-switch-height);
					margin-inline-start: calc(var(--ui-field-switch-offset) * -1);
					margin-block-start: calc(var(--ui-field-switch-label-offset) * -1);
				}

				&::after {
					// replacement checkbox (icon)
					mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='currentColor' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3C/svg%3E");
					width: var(--ui-field-switch-dot-size);
					height: var(--ui-field-switch-dot-size);
					margin-inline-start: calc((var(--ui-field-switch-offset) * -1) + var(--ui-field-switch-padding));
					margin-block-start: calc((var(--ui-field-switch-label-offset) * -1) + var(--ui-field-switch-padding));


					/*
					width: calc(var(--ui-field-checkbox-width) - (2 * var(--ui-field-checkbox-padding)));
					height: calc(var(--ui-field-checkbox-height) - (2 * var(--ui-field-checkbox-padding)));
					margin-inline-start: calc((var(--ui-field-checkbox-offset) * -1) + var(--ui-field-checkbox-padding));
					margin-block-start: calc((var(--ui-field-checkbox-label-offset) * -1) + var(--ui-field-checkbox-padding));
						*/
				}

			}

		}
	}
}
