@use "sass:list";

@layer components.alert {
	$alert-variants: primary, secondary, success, danger, warning, info;
	$icon-variants: success, danger, warning, info;
	//$alert-sizes: xs, sm, md, lg, xl;

	:root {
		--ui-alert-border-radius: #{toRem(8)};
	}

	.ui-alert {
		$alert: &;
		position: relative;
		max-width: toRem(500);
		margin-left: toRem(30);
		padding: toRem(24);
		padding-inline-start: 0;
		border-radius: 0 var(--ui-alert-border-radius) var(--ui-alert-border-radius) 0;
		margin-block-end: toRem(32);
		color: var(--ui-panel-fg);
		isolation: isolate;

		// left edge
		&::before {
			content: "";
			position: absolute;
			left: toRem(-30);
			top: toRem(39);
			height: calc(100% - #{toRem(39)});
			width: toRem(30);
			border-left: 3px solid transparent;
			border-radius: 0 0 0 var(--ui-alert-border-radius);
		}

		// icon
		&::after {
			content: "";
			position: absolute;
			width: toRem(40);
			height: toRem(40);
			background-size: toRem(40) toRem(40);
			background-repeat: no-repeat;
			left: toRem(-50);
			top: toRem(-20);
			mask-size: cover;
		}

		&__title {
			display: block;
			font-weight: bold;
			font-size: 1.125em;
			margin-block-end: .5rem;
			text-wrap: balance;
		}

		&__notch {
			position: absolute;
			width: toRem(40);
			height: toRem(40);
			border-left: 3px solid transparent;
			clip-path: path("M27,0 A27,27 0 0 1 1,28 L0,40 L40,40 L40,0 Z");
			left: toRem(-30);
			top: 0;
			z-index: -1;
			// border
			&::after {
				content: "";
				width: toRem(60);
				height: toRem(60);
				position: absolute;
				border: 3px solid transparent;
				border-radius: 50%;
				left: toRem(-33);
				top: toRem(-30);
			}
		}

		&__close {
			position: absolute;
			top: .5rem;
			right: .5rem;
		}

		// variants
		@each $variant in $alert-variants {
			&--#{$variant} {
				border-color: var(--ui-#{$variant});
				background-color: var(--ui-#{$variant}-bg);
				//color: var(--ui-#{$variant}-fg);

				> a {
					color: var(--ui-#{$variant}-text);
				}

				// no icon support
				@if not list.index($icon-variants, $variant) {

					&::before {
						background-color: var(--ui-#{$variant}-bg);
						top: 0;
						height: 100%;
						border-color: var(--ui-#{$variant});
						border-radius: var(--ui-alert-border-radius) 0 0 var(--ui-alert-border-radius);
					}

				}

				// icon support
				@if list.index($icon-variants, $variant) {

					&::before {
						background-color: var(--ui-#{$variant}-bg);
						border-color: var(--ui-#{$variant});
					}

					&::after {
						background-color: var(--ui-#{$variant});
						mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Cpath d='m9 12 2 2 4-4'/%3E%3C/svg%3E");
					}
					
					#{$alert}__notch {
						background-color: var(--ui-#{$variant}-bg);
						border-color: var(--ui-#{$variant});

						&::after {
							border-color: var(--ui-#{$variant});
						}
					}
				}
			}
		}

		// hide icon
		&--no-icon {

			#{$alert}__notch {
				display: none;
			}

			&::before {
				top: 0;
				height: 100%;
				border-radius: var(--ui-alert-border-radius) 0 0 var(--ui-alert-border-radius);
			}

			&::after {
				display: none;
			}

		}
	}

	// centre alert if this is either the only element on the page, or if there's also an #admin-trigger
	#react-root:has(> .ui-alert:only-child),
	#react-root:has(:nth-child(1).ui-alert):has(:nth-child(2)#admin-trigger):not(:has(:nth-child(3))) {
		display: flex;
		align-items: center;
		justify-content: center;

		> .ui-alert {
			width: 100%;
		}
	}

}
