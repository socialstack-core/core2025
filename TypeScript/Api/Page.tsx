/* * * * * * * | Auto Generated Script, do not edit | * * * * * * * */
// Imports
import {VersionedContent} from './Content'
import {AutoController} from './ApiEndpoints'
import {PageIncludes, ApiIncludes} from './Includes'
// eslint-disable-next-line no-restricted-imports
import {getOne, getList, getJson, getText} from 'UI/Functions/WebRequest'

// Module
/*
  A page. Pages are accessed via associated permalink(s).
*/
export type Page = VersionedContent<uint> & {
    title?: string,
    key?: string,
    bodyJson?: string,
    description?: string,
    canIndex: boolean,
    noFollow: boolean,
    preferIfLoggedIn: boolean,
    url?: string,
}

/*
*/
export type PageStateResult = {
    oldVersion?: boolean,
    redirect?: string,
    config?: Record<string, Config>,
    page?: Page,
    description?: string,
    title?: string,
    po?: Record<string, string | number | boolean>,
    tokenNames?: string[],
    tokens?: string[],
}

/*
*/
export type PageDetails = {
    url?: string,
    version?: long,
}

/**
*/
export class PageApi extends AutoController<Page, uint>{
    /**
      AutoGenerated, ensures all default CRUD functionality

    */
    public constructor (){
        super('page')
        this.includes = new PageIncludes('', '');
    }

    /**
      Attempts to get the page state of a page given the url and the version. Not available to the SSR or websocket APIs.
      @param {httpContext} - Api.AvailableEndpoints.XmlDocMember
      @param {context} - Api.AvailableEndpoints.XmlDocMember
      @param {pageDetails} - Api.AvailableEndpoints.XmlDocMember

    */
    public pageState = (pageDetails: PageDetails): Promise<PageStateResult>  => {
        return getJson<PageStateResult>(this.apiUrl + '/state', pageDetails)
    }

}

export default new PageApi();
