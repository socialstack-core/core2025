/* * * * * * * | Auto Generated Script, do not edit | * * * * * * * */
// Imports
import {VersionedContent} from './Content'
import {AutoController} from './ApiEndpoints'
import {LocaleIncludes, ApiIncludes} from './Includes'
// eslint-disable-next-line no-restricted-imports
import {getOne, getList, getJson, getText} from 'UI/Functions/WebRequest'

// Module
/*
  
*/
export type Locale = VersionedContent<uint> & {
    currencyCode?: string,
    name?: string,
    code?: string,
    flagIconRef?: string,
    aliases?: string,
    isDisabled: boolean,
    isRedirected: boolean,
    permanentRedirect: boolean,
    rightToLeft: boolean,
    pagePath?: string,
    domains?: string,
    shortCode?: string,
}

/**
*/
export class LocaleApi extends AutoController<Locale, uint>{
    /**
      AutoGenerated, ensures all default CRUD functionality

    */
    public constructor (){
        super('locale')
        this.includes = new LocaleIncludes('', '');
    }

    /**
      GET /v1/locale/set/2/
            Sets locale by its ID.

    */
    public set = (setSession: (s: SessionResponse) => Session, id: uint): Promise<SessionResponse>  => {
        return getJson<SessionResponse>(this.apiUrl + '/set/' + id + '')
        .then((s: SessionResponse) => {
        	setSession(s);
        	return s;
        })
    }

}

export default new LocaleApi();
