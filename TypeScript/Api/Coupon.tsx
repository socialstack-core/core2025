/* * * * * * * | Auto Generated Script, do not edit | * * * * * * * */
// Imports
import {VersionedContent} from './Content'
import {AutoController} from './ApiEndpoints'
import {CouponIncludes, ApiIncludes} from './Includes'
// eslint-disable-next-line no-restricted-imports
import {getOne, getList, getJson, getText} from 'UI/Functions/WebRequest'

// Module
/*
  A Coupon
*/
export type Coupon = VersionedContent<uint> & {
    token?: string,
    maxNumberOfPeople: uint,
    disabled: boolean,
    expiryDateUtc?: Date,
    subscriptionDelayDays: uint,
    discountPercent: uint,
    discountFixedAmount: uint,
    freeDelivery: boolean,
    minimumSpendAmount: uint,
}

/**
*/
export class CouponApi extends AutoController<Coupon, uint>{
    /**
      AutoGenerated, ensures all default CRUD functionality

    */
    public constructor (){
        super('coupon')
        this.includes = new CouponIncludes('', '');
    }

    /**
      Checks a coupon code and if it's not disabled, returns its info.
      @param {context} - Api.AvailableEndpoints.XmlDocMember
      @param {couponCode} - Api.AvailableEndpoints.XmlDocMember

    */
    public checkCoupon = (couponCode: string, includes?: ApiIncludes[]): Promise<Coupon>  => {
        return getOne<Coupon>(this.apiUrl + '/check/' + couponCode + ''+ (Array.isArray(includes) && includes.length != 0 ? '?includes=' + includes.map(include => include.toString()).join(', ') : ''))
    }

}

export default new CouponApi();
