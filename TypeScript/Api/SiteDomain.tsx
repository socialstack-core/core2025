/* * * * * * * | Auto Generated Script, do not edit | * * * * * * * */
// Imports
import {VersionedContent} from './Content'
import {AutoController} from './ApiEndpoints'
import {SiteDomainIncludes, ApiIncludes} from './Includes'
// eslint-disable-next-line no-restricted-imports
import {getOne, getList, getJson, getText} from 'UI/Functions/WebRequest'

// Module
/*
  A SiteDomain
*/
export type SiteDomain = VersionedContent<uint> & {
    excludeFromSiteMap: boolean,
    name?: string,
    code?: string,
    isDisabled: boolean,
    isPrimary: boolean,
    isRoot: boolean,
    domain?: string,
}

/**
*/
export class SiteDomainApi extends AutoController<SiteDomain, uint>{
    /**
      AutoGenerated, ensures all default CRUD functionality

    */
    public constructor (){
        super('sitedomain')
        this.includes = new SiteDomainIncludes('', '');
    }

    /**
      GET /v1/domain/code/abc/
            Gets the primary site domain mapping via it's code

    */
    public getByCode = (code: string, includes: ApiIncludes[] = []): Promise<SiteDomain>  => {
        return getOne<SiteDomain>(this.apiUrl + '/code/' + code + ''+ (Array.isArray(includes) && includes.length != 0 ? '?includes=' + includes.map(include => include.toString()).join(', ') : ''))
    }

}

export default new SiteDomainApi();
