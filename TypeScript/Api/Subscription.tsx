/* * * * * * * | Auto Generated Script, do not edit | * * * * * * * */
// Imports
import {VersionedContent} from './Content'
import {AutoController} from './ApiEndpoints'
import {SubscriptionIncludes, ApiIncludes} from './Includes'
// eslint-disable-next-line no-restricted-imports
import {getOne, getList, getJson, getText} from 'UI/Functions/WebRequest'

// Module
/*
  A Subscription.
*/
export type Subscription = VersionedContent<uint> & {
    lastChargeUtc: Date,
    nextChargeUtc: Date,
    willCancel: boolean,
    timeslotFrequency: uint,
    status: uint,
    paymentMethodId: uint,
    localeId: uint,
}

/*
*/
export type CardUpdateStatus = {
    status?: uint,
}

/**
*/
export class SubscriptionApi extends AutoController<Subscription, uint>{
    /**
      AutoGenerated, ensures all default CRUD functionality

    */
    public constructor (){
        super('subscription')
        this.includes = new SubscriptionIncludes('', '');
    }

    /**
      Updates the card in use on a given subscription.

    */
    public updateCard = (id: uint, cardUpdate: Record<string, string | number | boolean>): Promise<CardUpdateStatus>  => {
        return getText(this.apiUrl + '/' + id + '/update-card', cardUpdate)
    }

}

export default new SubscriptionApi();
