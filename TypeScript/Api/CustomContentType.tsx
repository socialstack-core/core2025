/* * * * * * * | Auto Generated Script, do not edit | * * * * * * * */
// Imports
import {VersionedContent} from './Content'
import {CustomContentTypeField} from './CustomContentTypeField'
import {AutoController} from './ApiEndpoints'
import {CustomContentTypeIncludes, ApiIncludes} from './Includes'
// eslint-disable-next-line no-restricted-imports
import {getOne, getList, getJson, getText} from 'UI/Functions/WebRequest'

// Module
/*
  A custom content type. Has a list of fields.
*/
export type CustomContentType = VersionedContent<uint> & {
    name?: string,
    nickName?: string,
    summary?: string,
    iconRef?: string,
    deleted: boolean,
    fields?: CustomContentTypeField[],
}

/*
*/
export type TypeInfo = {
    name?: string,
    value?: string,
}

/**
*/
export class CustomContentTypeApi extends AutoController<CustomContentType, uint>{
    /**
      AutoGenerated, ensures all default CRUD functionality

    */
    public constructor (){
        super('customcontenttype')
        this.includes = new CustomContentTypeIncludes('', '');
    }

    /**
      All custom types which will include deleted ones.

    */
    public getAllTypes = (): Promise<String[]>  => {
        return getJson<string>(this.apiUrl + '/alltypes')
    }

    /**
      Gets all custom types excluding deleted ones.

    */
    public getAllTypesPlus = (): Promise<TypeInfo[]>  => {
        return getJson<TypeInfo>(this.apiUrl + '/allcustomtypesplus')
    }

}

export default new CustomContentTypeApi();
